
regular tree grammar
  start Start
  productions
    ListStarOfFilter0                -> ListPlusOfFilter0
    ListStarOfFilter0                -> <nil>()
    ListStarOfFilter0                -> <conc>(ListStarOfFilter0,ListStarOfFilter0)
    ListPlusOfFilter0                -> <conc>(ListStarOfFilter0,ListPlusOfFilter0)
    ListPlusOfFilter0                -> <conc>(ListPlusOfFilter0,ListStarOfFilter0)
    ListPlusOfFilter0                -> <conc>(ListPlusOfFilter0,ListPlusOfFilter0)
    ListPlusOfFilter0                -> <cons>(Filter,ListStarOfFilter0)
    ListStarOfNamedExp0              -> ListPlusOfNamedExp0
    ListStarOfNamedExp0              -> <nil>()
    ListStarOfNamedExp0              -> <conc>(ListStarOfNamedExp0,ListStarOfNamedExp0)
    ListPlusOfNamedExp0              -> <conc>(ListStarOfNamedExp0,ListPlusOfNamedExp0)
    ListPlusOfNamedExp0              -> <conc>(ListPlusOfNamedExp0,ListStarOfNamedExp0)
    ListPlusOfNamedExp0              -> <conc>(ListPlusOfNamedExp0,ListPlusOfNamedExp0)
    ListPlusOfNamedExp0              -> <cons>(NamedExp,ListStarOfNamedExp0)
    ListStarOfJSExp0                 -> ListPlusOfJSExp0
    ListStarOfJSExp0                 -> <nil>()
    ListStarOfJSExp0                 -> <conc>(ListStarOfJSExp0,ListStarOfJSExp0)
    ListPlusOfJSExp0                 -> <conc>(ListStarOfJSExp0,ListPlusOfJSExp0)
    ListPlusOfJSExp0                 -> <conc>(ListPlusOfJSExp0,ListStarOfJSExp0)
    ListPlusOfJSExp0                 -> <conc>(ListPlusOfJSExp0,ListPlusOfJSExp0)
    ListPlusOfJSExp0                 -> <cons>(JSExp,ListStarOfJSExp0)
    ListStarOfUriPart0               -> ListPlusOfUriPart0
    ListStarOfUriPart0               -> <nil>()
    ListStarOfUriPart0               -> <conc>(ListStarOfUriPart0,ListStarOfUriPart0)
    ListPlusOfUriPart0               -> <conc>(ListStarOfUriPart0,ListPlusOfUriPart0)
    ListPlusOfUriPart0               -> <conc>(ListPlusOfUriPart0,ListStarOfUriPart0)
    ListPlusOfUriPart0               -> <conc>(ListPlusOfUriPart0,ListPlusOfUriPart0)
    ListPlusOfUriPart0               -> <cons>(UriPart,ListStarOfUriPart0)
    ListStarOfFILENAME0              -> ListPlusOfFILENAME0
    ListStarOfFILENAME0              -> <nil>()
    ListStarOfFILENAME0              -> <conc>(ListStarOfFILENAME0,ListStarOfFILENAME0)
    ListPlusOfFILENAME0              -> <conc>(ListStarOfFILENAME0,ListPlusOfFILENAME0)
    ListPlusOfFILENAME0              -> <conc>(ListPlusOfFILENAME0,ListStarOfFILENAME0)
    ListPlusOfFILENAME0              -> <conc>(ListPlusOfFILENAME0,ListPlusOfFILENAME0)
    ListPlusOfFILENAME0              -> <cons>(FILENAME,ListStarOfFILENAME0)
    ListStarOfNFType0                -> ListPlusOfNFType0
    ListStarOfNFType0                -> <nil>()
    ListStarOfNFType0                -> <conc>(ListStarOfNFType0,ListStarOfNFType0)
    ListPlusOfNFType0                -> <conc>(ListStarOfNFType0,ListPlusOfNFType0)
    ListPlusOfNFType0                -> <conc>(ListPlusOfNFType0,ListStarOfNFType0)
    ListPlusOfNFType0                -> <conc>(ListPlusOfNFType0,ListPlusOfNFType0)
    ListPlusOfNFType0                -> <cons>(NFType,ListStarOfNFType0)
    ListStarOfType0                  -> ListPlusOfType0
    ListStarOfType0                  -> <nil>()
    ListStarOfType0                  -> <conc>(ListStarOfType0,ListStarOfType0)
    ListPlusOfType0                  -> <conc>(ListStarOfType0,ListPlusOfType0)
    ListPlusOfType0                  -> <conc>(ListPlusOfType0,ListStarOfType0)
    ListPlusOfType0                  -> <conc>(ListPlusOfType0,ListPlusOfType0)
    ListPlusOfType0                  -> <cons>(Type,ListStarOfType0)
    ListStarOfDefinition0            -> ListPlusOfDefinition0
    ListStarOfDefinition0            -> <nil>()
    ListStarOfDefinition0            -> <conc>(ListStarOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0            -> <conc>(ListStarOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0            -> <conc>(ListPlusOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0            -> <conc>(ListPlusOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0            -> <cons>(Definition,ListStarOfDefinition0)
    ListStarOfScreenElem0            -> ListPlusOfScreenElem0
    ListStarOfScreenElem0            -> <nil>()
    ListStarOfScreenElem0            -> <conc>(ListStarOfScreenElem0,ListStarOfScreenElem0)
    ListPlusOfScreenElem0            -> <conc>(ListStarOfScreenElem0,ListPlusOfScreenElem0)
    ListPlusOfScreenElem0            -> <conc>(ListPlusOfScreenElem0,ListStarOfScreenElem0)
    ListPlusOfScreenElem0            -> <conc>(ListPlusOfScreenElem0,ListPlusOfScreenElem0)
    ListPlusOfScreenElem0            -> <cons>(ScreenElem,ListStarOfScreenElem0)
    ListStarOfStatement0             -> ListPlusOfStatement0
    ListStarOfStatement0             -> <nil>()
    ListStarOfStatement0             -> <conc>(ListStarOfStatement0,ListStarOfStatement0)
    ListPlusOfStatement0             -> <conc>(ListStarOfStatement0,ListPlusOfStatement0)
    ListPlusOfStatement0             -> <conc>(ListPlusOfStatement0,ListStarOfStatement0)
    ListPlusOfStatement0             -> <conc>(ListPlusOfStatement0,ListPlusOfStatement0)
    ListPlusOfStatement0             -> <cons>(Statement,ListStarOfStatement0)
    ListStarOfHtmlArg0               -> ListPlusOfHtmlArg0
    ListStarOfHtmlArg0               -> <nil>()
    ListStarOfHtmlArg0               -> <conc>(ListStarOfHtmlArg0,ListStarOfHtmlArg0)
    ListPlusOfHtmlArg0               -> <conc>(ListStarOfHtmlArg0,ListPlusOfHtmlArg0)
    ListPlusOfHtmlArg0               -> <conc>(ListPlusOfHtmlArg0,ListStarOfHtmlArg0)
    ListPlusOfHtmlArg0               -> <conc>(ListPlusOfHtmlArg0,ListPlusOfHtmlArg0)
    ListPlusOfHtmlArg0               -> <cons>(HtmlArg,ListStarOfHtmlArg0)
    ListStarOfFArg0                  -> ListPlusOfFArg0
    ListStarOfFArg0                  -> <nil>()
    ListStarOfFArg0                  -> <conc>(ListStarOfFArg0,ListStarOfFArg0)
    ListPlusOfFArg0                  -> <conc>(ListStarOfFArg0,ListPlusOfFArg0)
    ListPlusOfFArg0                  -> <conc>(ListPlusOfFArg0,ListStarOfFArg0)
    ListPlusOfFArg0                  -> <conc>(ListPlusOfFArg0,ListPlusOfFArg0)
    ListPlusOfFArg0                  -> <cons>(FArg,ListStarOfFArg0)
    ListStarOfMetaAnno0              -> ListPlusOfMetaAnno0
    ListStarOfMetaAnno0              -> <nil>()
    ListStarOfMetaAnno0              -> <conc>(ListStarOfMetaAnno0,ListStarOfMetaAnno0)
    ListPlusOfMetaAnno0              -> <conc>(ListStarOfMetaAnno0,ListPlusOfMetaAnno0)
    ListPlusOfMetaAnno0              -> <conc>(ListPlusOfMetaAnno0,ListStarOfMetaAnno0)
    ListPlusOfMetaAnno0              -> <conc>(ListPlusOfMetaAnno0,ListPlusOfMetaAnno0)
    ListPlusOfMetaAnno0              -> <cons>(MetaAnno,ListStarOfMetaAnno0)
    ListStarOfExp0                   -> ListPlusOfExp0
    ListStarOfExp0                   -> <nil>()
    ListStarOfExp0                   -> <conc>(ListStarOfExp0,ListStarOfExp0)
    ListPlusOfExp0                   -> <conc>(ListStarOfExp0,ListPlusOfExp0)
    ListPlusOfExp0                   -> <conc>(ListPlusOfExp0,ListStarOfExp0)
    ListPlusOfExp0                   -> <conc>(ListPlusOfExp0,ListPlusOfExp0)
    ListPlusOfExp0                   -> <cons>(Exp,ListStarOfExp0)
    ListStarOfPropVal0               -> ListPlusOfPropVal0
    ListStarOfPropVal0               -> <nil>()
    ListStarOfPropVal0               -> <conc>(ListStarOfPropVal0,ListStarOfPropVal0)
    ListPlusOfPropVal0               -> <conc>(ListStarOfPropVal0,ListPlusOfPropVal0)
    ListPlusOfPropVal0               -> <conc>(ListPlusOfPropVal0,ListStarOfPropVal0)
    ListPlusOfPropVal0               -> <conc>(ListPlusOfPropVal0,ListPlusOfPropVal0)
    ListPlusOfPropVal0               -> <cons>(PropVal,ListStarOfPropVal0)
    ListStarOfLValue0                -> ListPlusOfLValue0
    ListStarOfLValue0                -> <nil>()
    ListStarOfLValue0                -> <conc>(ListStarOfLValue0,ListStarOfLValue0)
    ListPlusOfLValue0                -> <conc>(ListStarOfLValue0,ListPlusOfLValue0)
    ListPlusOfLValue0                -> <conc>(ListPlusOfLValue0,ListStarOfLValue0)
    ListPlusOfLValue0                -> <conc>(ListPlusOfLValue0,ListPlusOfLValue0)
    ListPlusOfLValue0                -> <cons>(LValue,ListStarOfLValue0)
    ListStarOfCharClass0             -> ListPlusOfCharClass0
    ListStarOfCharClass0             -> <nil>()
    ListStarOfCharClass0             -> <conc>(ListStarOfCharClass0,ListStarOfCharClass0)
    ListPlusOfCharClass0             -> <conc>(ListStarOfCharClass0,ListPlusOfCharClass0)
    ListPlusOfCharClass0             -> <conc>(ListPlusOfCharClass0,ListStarOfCharClass0)
    ListPlusOfCharClass0             -> <conc>(ListPlusOfCharClass0,ListPlusOfCharClass0)
    ListPlusOfCharClass0             -> <cons>(<int>,ListStarOfCharClass0)
    ListStarOfStringQuotedPart10     -> ListPlusOfStringQuotedPart10
    ListStarOfStringQuotedPart10     -> <nil>()
    ListStarOfStringQuotedPart10     -> <conc>(ListStarOfStringQuotedPart10,ListStarOfStringQuotedPart10)
    ListPlusOfStringQuotedPart10     -> <conc>(ListStarOfStringQuotedPart10,ListPlusOfStringQuotedPart10)
    ListPlusOfStringQuotedPart10     -> <conc>(ListPlusOfStringQuotedPart10,ListStarOfStringQuotedPart10)
    ListPlusOfStringQuotedPart10     -> <conc>(ListPlusOfStringQuotedPart10,ListPlusOfStringQuotedPart10)
    ListPlusOfStringQuotedPart10     -> <cons>(StringQuotedPart1,ListStarOfStringQuotedPart10)
    ListStarOfJSStat0                -> ListPlusOfJSStat0
    ListStarOfJSStat0                -> <nil>()
    ListStarOfJSStat0                -> <conc>(ListStarOfJSStat0,ListStarOfJSStat0)
    ListPlusOfJSStat0                -> <conc>(ListStarOfJSStat0,ListPlusOfJSStat0)
    ListPlusOfJSStat0                -> <conc>(ListPlusOfJSStat0,ListStarOfJSStat0)
    ListPlusOfJSStat0                -> <conc>(ListPlusOfJSStat0,ListPlusOfJSStat0)
    ListPlusOfJSStat0                -> <cons>(JSStat,ListStarOfJSStat0)
    ListStarOfJSID0                  -> ListPlusOfJSID0
    ListStarOfJSID0                  -> <nil>()
    ListStarOfJSID0                  -> <conc>(ListStarOfJSID0,ListStarOfJSID0)
    ListPlusOfJSID0                  -> <conc>(ListStarOfJSID0,ListPlusOfJSID0)
    ListPlusOfJSID0                  -> <conc>(ListPlusOfJSID0,ListStarOfJSID0)
    ListPlusOfJSID0                  -> <conc>(ListPlusOfJSID0,ListPlusOfJSID0)
    ListPlusOfJSID0                  -> <cons>(JSID,ListStarOfJSID0)
    ListStarOfJSPropVal0             -> ListPlusOfJSPropVal0
    ListStarOfJSPropVal0             -> <nil>()
    ListStarOfJSPropVal0             -> <conc>(ListStarOfJSPropVal0,ListStarOfJSPropVal0)
    ListPlusOfJSPropVal0             -> <conc>(ListStarOfJSPropVal0,ListPlusOfJSPropVal0)
    ListPlusOfJSPropVal0             -> <conc>(ListPlusOfJSPropVal0,ListStarOfJSPropVal0)
    ListPlusOfJSPropVal0             -> <conc>(ListPlusOfJSPropVal0,ListPlusOfJSPropVal0)
    ListPlusOfJSPropVal0             -> <cons>(JSPropVal,ListStarOfJSPropVal0)
    OptJSID0                         -> <some>(JSID)
    OptJSID0                         -> <none>()
    ListStarOfCase0                  -> ListPlusOfCase0
    ListStarOfCase0                  -> <nil>()
    ListStarOfCase0                  -> <conc>(ListStarOfCase0,ListStarOfCase0)
    ListPlusOfCase0                  -> <conc>(ListStarOfCase0,ListPlusOfCase0)
    ListPlusOfCase0                  -> <conc>(ListPlusOfCase0,ListStarOfCase0)
    ListPlusOfCase0                  -> <conc>(ListPlusOfCase0,ListPlusOfCase0)
    ListPlusOfCase0                  -> <cons>(Case,ListStarOfCase0)
    ListStarOfServerSetting0         -> ListPlusOfServerSetting0
    ListStarOfServerSetting0         -> <nil>()
    ListStarOfServerSetting0         -> <conc>(ListStarOfServerSetting0,ListStarOfServerSetting0)
    ListPlusOfServerSetting0         -> <conc>(ListStarOfServerSetting0,ListPlusOfServerSetting0)
    ListPlusOfServerSetting0         -> <conc>(ListPlusOfServerSetting0,ListStarOfServerSetting0)
    ListPlusOfServerSetting0         -> <conc>(ListPlusOfServerSetting0,ListPlusOfServerSetting0)
    ListPlusOfServerSetting0         -> <cons>(ServerSetting,ListStarOfServerSetting0)
    ListStarOfPLATFORM0              -> ListPlusOfPLATFORM0
    ListStarOfPLATFORM0              -> <nil>()
    ListStarOfPLATFORM0              -> <conc>(ListStarOfPLATFORM0,ListStarOfPLATFORM0)
    ListPlusOfPLATFORM0              -> <conc>(ListStarOfPLATFORM0,ListPlusOfPLATFORM0)
    ListPlusOfPLATFORM0              -> <conc>(ListPlusOfPLATFORM0,ListStarOfPLATFORM0)
    ListPlusOfPLATFORM0              -> <conc>(ListPlusOfPLATFORM0,ListPlusOfPLATFORM0)
    ListPlusOfPLATFORM0              -> <cons>(PLATFORM,ListStarOfPLATFORM0)
    ListStarOfNativeSetting0         -> ListPlusOfNativeSetting0
    ListStarOfNativeSetting0         -> <nil>()
    ListStarOfNativeSetting0         -> <conc>(ListStarOfNativeSetting0,ListStarOfNativeSetting0)
    ListPlusOfNativeSetting0         -> <conc>(ListStarOfNativeSetting0,ListPlusOfNativeSetting0)
    ListPlusOfNativeSetting0         -> <conc>(ListPlusOfNativeSetting0,ListStarOfNativeSetting0)
    ListPlusOfNativeSetting0         -> <conc>(ListPlusOfNativeSetting0,ListPlusOfNativeSetting0)
    ListPlusOfNativeSetting0         -> <cons>(NativeSetting,ListStarOfNativeSetting0)
    ListStarOfSetting0               -> ListPlusOfSetting0
    ListStarOfSetting0               -> <nil>()
    ListStarOfSetting0               -> <conc>(ListStarOfSetting0,ListStarOfSetting0)
    ListPlusOfSetting0               -> <conc>(ListStarOfSetting0,ListPlusOfSetting0)
    ListPlusOfSetting0               -> <conc>(ListPlusOfSetting0,ListStarOfSetting0)
    ListPlusOfSetting0               -> <conc>(ListPlusOfSetting0,ListPlusOfSetting0)
    ListPlusOfSetting0               -> <cons>(Setting,ListStarOfSetting0)
    ListStarOfJSHexDigit0            -> <string>
    ListPlusOfJSHexDigit0            -> <string>
    OptJSExponentPart0               -> <string>
    ListStarOfJSStringChar20         -> <string>
    ListPlusOfJSStringChar20         -> <string>
    ListStarOfJSStringChar0          -> <string>
    ListPlusOfJSStringChar0          -> <string>
    ListStarOfStyleExp0              -> ListPlusOfStyleExp0
    ListStarOfStyleExp0              -> <nil>()
    ListStarOfStyleExp0              -> <conc>(ListStarOfStyleExp0,ListStarOfStyleExp0)
    ListPlusOfStyleExp0              -> <conc>(ListStarOfStyleExp0,ListPlusOfStyleExp0)
    ListPlusOfStyleExp0              -> <conc>(ListPlusOfStyleExp0,ListStarOfStyleExp0)
    ListPlusOfStyleExp0              -> <conc>(ListPlusOfStyleExp0,ListPlusOfStyleExp0)
    ListPlusOfStyleExp0              -> <cons>(StyleExp,ListStarOfStyleExp0)
    ListStarOfStyleExp1              -> ListPlusOfStyleExp1
    ListStarOfStyleExp1              -> <nil>()
    ListStarOfStyleExp1              -> <conc>(ListStarOfStyleExp1,ListStarOfStyleExp1)
    ListPlusOfStyleExp1              -> <conc>(ListStarOfStyleExp1,ListPlusOfStyleExp1)
    ListPlusOfStyleExp1              -> <conc>(ListPlusOfStyleExp1,ListStarOfStyleExp1)
    ListPlusOfStyleExp1              -> <conc>(ListPlusOfStyleExp1,ListPlusOfStyleExp1)
    ListPlusOfStyleExp1              -> <cons>(StyleExp,ListStarOfStyleExp1)
    ListStarOfStyleExps0             -> ListPlusOfStyleExps0
    ListStarOfStyleExps0             -> <nil>()
    ListStarOfStyleExps0             -> <conc>(ListStarOfStyleExps0,ListStarOfStyleExps0)
    ListPlusOfStyleExps0             -> <conc>(ListStarOfStyleExps0,ListPlusOfStyleExps0)
    ListPlusOfStyleExps0             -> <conc>(ListPlusOfStyleExps0,ListStarOfStyleExps0)
    ListPlusOfStyleExps0             -> <conc>(ListPlusOfStyleExps0,ListPlusOfStyleExps0)
    ListPlusOfStyleExps0             -> <cons>(StyleExps,ListStarOfStyleExps0)
    ListStarOfStyleSelector0         -> ListPlusOfStyleSelector0
    ListStarOfStyleSelector0         -> <nil>()
    ListStarOfStyleSelector0         -> <conc>(ListStarOfStyleSelector0,ListStarOfStyleSelector0)
    ListPlusOfStyleSelector0         -> <conc>(ListStarOfStyleSelector0,ListPlusOfStyleSelector0)
    ListPlusOfStyleSelector0         -> <conc>(ListPlusOfStyleSelector0,ListStarOfStyleSelector0)
    ListPlusOfStyleSelector0         -> <conc>(ListPlusOfStyleSelector0,ListPlusOfStyleSelector0)
    ListPlusOfStyleSelector0         -> <cons>(StyleSelector,ListStarOfStyleSelector0)
    ListStarOfStyleElem0             -> ListPlusOfStyleElem0
    ListStarOfStyleElem0             -> <nil>()
    ListStarOfStyleElem0             -> <conc>(ListStarOfStyleElem0,ListStarOfStyleElem0)
    ListPlusOfStyleElem0             -> <conc>(ListStarOfStyleElem0,ListPlusOfStyleElem0)
    ListPlusOfStyleElem0             -> <conc>(ListPlusOfStyleElem0,ListStarOfStyleElem0)
    ListPlusOfStyleElem0             -> <conc>(ListPlusOfStyleElem0,ListPlusOfStyleElem0)
    ListPlusOfStyleElem0             -> <cons>(StyleElem,ListStarOfStyleElem0)
    ListStarOfStyleFArg0             -> ListPlusOfStyleFArg0
    ListStarOfStyleFArg0             -> <nil>()
    ListStarOfStyleFArg0             -> <conc>(ListStarOfStyleFArg0,ListStarOfStyleFArg0)
    ListPlusOfStyleFArg0             -> <conc>(ListStarOfStyleFArg0,ListPlusOfStyleFArg0)
    ListPlusOfStyleFArg0             -> <conc>(ListPlusOfStyleFArg0,ListStarOfStyleFArg0)
    ListPlusOfStyleFArg0             -> <conc>(ListPlusOfStyleFArg0,ListPlusOfStyleFArg0)
    ListPlusOfStyleFArg0             -> <cons>(StyleFArg,ListStarOfStyleFArg0)
    ListStarOfEntityBodyDecl0        -> ListPlusOfEntityBodyDecl0
    ListStarOfEntityBodyDecl0        -> <nil>()
    ListStarOfEntityBodyDecl0        -> <conc>(ListStarOfEntityBodyDecl0,ListStarOfEntityBodyDecl0)
    ListPlusOfEntityBodyDecl0        -> <conc>(ListStarOfEntityBodyDecl0,ListPlusOfEntityBodyDecl0)
    ListPlusOfEntityBodyDecl0        -> <conc>(ListPlusOfEntityBodyDecl0,ListStarOfEntityBodyDecl0)
    ListPlusOfEntityBodyDecl0        -> <conc>(ListPlusOfEntityBodyDecl0,ListPlusOfEntityBodyDecl0)
    ListPlusOfEntityBodyDecl0        -> <cons>(EntityBodyDecl,ListStarOfEntityBodyDecl0)
    ListStarOfExternalMemberDecl0    -> ListPlusOfExternalMemberDecl0
    ListStarOfExternalMemberDecl0    -> <nil>()
    ListStarOfExternalMemberDecl0    -> <conc>(ListStarOfExternalMemberDecl0,ListStarOfExternalMemberDecl0)
    ListPlusOfExternalMemberDecl0    -> <conc>(ListStarOfExternalMemberDecl0,ListPlusOfExternalMemberDecl0)
    ListPlusOfExternalMemberDecl0    -> <conc>(ListPlusOfExternalMemberDecl0,ListStarOfExternalMemberDecl0)
    ListPlusOfExternalMemberDecl0    -> <conc>(ListPlusOfExternalMemberDecl0,ListPlusOfExternalMemberDecl0)
    ListPlusOfExternalMemberDecl0    -> <cons>(ExternalMemberDecl,ListStarOfExternalMemberDecl0)
    ListStarOfID0                    -> ListPlusOfID0
    ListStarOfID0                    -> <nil>()
    ListStarOfID0                    -> <conc>(ListStarOfID0,ListStarOfID0)
    ListPlusOfID0                    -> <conc>(ListStarOfID0,ListPlusOfID0)
    ListPlusOfID0                    -> <conc>(ListPlusOfID0,ListStarOfID0)
    ListPlusOfID0                    -> <conc>(ListPlusOfID0,ListPlusOfID0)
    ListPlusOfID0                    -> <cons>(ID,ListStarOfID0)
    ListStarOfModifier0              -> <string>
    ListPlusOfModifier0              -> <string>
    BracketLiteral_BracketCharacter0 -> BracketCharacter
    BracketLiteral_BracketCharacter0 -> BracketLiteral
    ListStarOfBracketItem0           -> ListPlusOfBracketItem0
    ListStarOfBracketItem0           -> <nil>()
    ListStarOfBracketItem0           -> <conc>(ListStarOfBracketItem0,ListStarOfBracketItem0)
    ListPlusOfBracketItem0           -> <conc>(ListStarOfBracketItem0,ListPlusOfBracketItem0)
    ListPlusOfBracketItem0           -> <conc>(ListPlusOfBracketItem0,ListStarOfBracketItem0)
    ListPlusOfBracketItem0           -> <conc>(ListPlusOfBracketItem0,ListPlusOfBracketItem0)
    ListPlusOfBracketItem0           -> <cons>(BracketItem,ListStarOfBracketItem0)
    ListStarOfPiece0                 -> ListPlusOfPiece0
    ListStarOfPiece0                 -> <nil>()
    ListStarOfPiece0                 -> <conc>(ListStarOfPiece0,ListStarOfPiece0)
    ListPlusOfPiece0                 -> <conc>(ListStarOfPiece0,ListPlusOfPiece0)
    ListPlusOfPiece0                 -> <conc>(ListPlusOfPiece0,ListStarOfPiece0)
    ListPlusOfPiece0                 -> <conc>(ListPlusOfPiece0,ListPlusOfPiece0)
    ListPlusOfPiece0                 -> <cons>(Piece,ListStarOfPiece0)
    ListStarOfResourceElem0          -> ListPlusOfResourceElem0
    ListStarOfResourceElem0          -> <nil>()
    ListStarOfResourceElem0          -> <conc>(ListStarOfResourceElem0,ListStarOfResourceElem0)
    ListPlusOfResourceElem0          -> <conc>(ListStarOfResourceElem0,ListPlusOfResourceElem0)
    ListPlusOfResourceElem0          -> <conc>(ListPlusOfResourceElem0,ListStarOfResourceElem0)
    ListPlusOfResourceElem0          -> <conc>(ListPlusOfResourceElem0,ListPlusOfResourceElem0)
    ListPlusOfResourceElem0          -> <cons>(ResourceElem,ListStarOfResourceElem0)
    ListStarOfServiceElem0           -> ListPlusOfServiceElem0
    ListStarOfServiceElem0           -> <nil>()
    ListStarOfServiceElem0           -> <conc>(ListStarOfServiceElem0,ListStarOfServiceElem0)
    ListPlusOfServiceElem0           -> <conc>(ListStarOfServiceElem0,ListPlusOfServiceElem0)
    ListPlusOfServiceElem0           -> <conc>(ListPlusOfServiceElem0,ListStarOfServiceElem0)
    ListPlusOfServiceElem0           -> <conc>(ListPlusOfServiceElem0,ListPlusOfServiceElem0)
    ListPlusOfServiceElem0           -> <cons>(ServiceElem,ListStarOfServiceElem0)
    ListStarOfAnno0                  -> ListPlusOfAnno0
    ListStarOfAnno0                  -> <nil>()
    ListStarOfAnno0                  -> <conc>(ListStarOfAnno0,ListStarOfAnno0)
    ListPlusOfAnno0                  -> <conc>(ListStarOfAnno0,ListPlusOfAnno0)
    ListPlusOfAnno0                  -> <conc>(ListPlusOfAnno0,ListStarOfAnno0)
    ListPlusOfAnno0                  -> <conc>(ListPlusOfAnno0,ListPlusOfAnno0)
    ListPlusOfAnno0                  -> <cons>(Anno,ListStarOfAnno0)
    ListStarOfStringChar20           -> <string>
    ListPlusOfStringChar20           -> <string>
    ListStarOfStringChar0            -> <string>
    ListPlusOfStringChar0            -> <string>
    OptExponentPart0                 -> <string>
    OptLit0                          -> <string>
    ScreenElem                       -> ControlCallNoArgs(LimitedExp,ListStarOfScreenElem0)
    ScreenElem                       -> ControlCallNoBody(LimitedExp,ListStarOfNamedExp0)
    ScreenElem                       -> ControlCall(LimitedExp,ListStarOfNamedExp0,ListStarOfScreenElem0)
    ScreenElem                       -> WhenNoElse(Exp,ListStarOfScreenElem0)
    ScreenElem                       -> When(Exp,ListStarOfScreenElem0,ListStarOfScreenElem0)
    ScreenElem                       -> WhenNoElse(Exp,ListStarOfScreenElem0)
    ScreenElem                       -> ListInferred(LValue,Exp,ListStarOfScreenElem0)
    ScreenElem                       -> List(LValue,Type,Exp,ListStarOfScreenElem0)
    ScreenElem                       -> ScreenString(STRING)
    ScreenElem                       -> Script(ListStarOfStatement0)
    ScreenElem                       -> Script(ListStarOfStatement0)
    ScreenElem                       -> FunctionDef
    ScreenElem                       -> DeriveDeclInferred(ID,Exp)
    ScreenElem                       -> DeriveDecl(ID,Type,Exp)
    ScreenElem                       -> VarDeclInferred(ID,Exp)
    ScreenElem                       -> VarDecl(ID,Type,Exp)
    ScreenElem                       -> ControlDefinition
    HtmlArg                          -> HtmlDatabindArg(Exp)
    HtmlArg                          -> HtmlArg(HTMLID,Exp)
    ScreenElem                       -> NamedHtmlShort(ID,HTMLID,ListStarOfHtmlArg0)
    ScreenElem                       -> NamedHtml(ID,HTMLID,ListStarOfHtmlArg0,ListStarOfScreenElem0,HTMLID)
    ScreenElem                       -> HtmlShort(HTMLID,ListStarOfHtmlArg0)
    ScreenElem                       -> Html(HTMLID,ListStarOfHtmlArg0,ListStarOfScreenElem0,HTMLID)
    Definition                       -> ControlDefinition
    ControlSig                       -> ControlSig(ID,ListStarOfFArg0)
    ControlDefinition                -> Control(ListStarOfMetaAnno0,QId,ListStarOfFArg0,ListStarOfScreenElem0)
    ControlDefinition                -> Control(ListStarOfMetaAnno0,QId,ListStarOfFArg0,ListStarOfScreenElem0)
    Definition                       -> Screen(ListStarOfMetaAnno0,QId,ListStarOfFArg0,Type,ListStarOfScreenElem0)
    Definition                       -> ScreenNoReturnType(ListStarOfMetaAnno0,QId,ListStarOfFArg0,ListStarOfScreenElem0)
    SetExp                           -> SetAnd(SetExp,SetExp)
    SetExp                           -> SetNotIn(ID,LimitedSetExp)
    SetExp                           -> SetIn(ID,LimitedSetExp)
    SetExp                           -> SetGeq(ID,LimitedSetExp)
    SetExp                           -> SetGt(ID,LimitedSetExp)
    SetExp                           -> SetLeq(ID,LimitedSetExp)
    SetExp                           -> SetLt(ID,LimitedSetExp)
    SetExp                           -> SetNotEq(ID,LimitedSetExp)
    SetExp                           -> SetEq(ID,LimitedSetExp)
    OrderExp                         -> OrderDescending(ID)
    OrderExp                         -> OrderAscending(ID)
    OrderExp                         -> OrderNonSpecific(ID)
    Filter                           -> OffsetFilter(Exp)
    Filter                           -> LimitFilter(Exp)
    Filter                           -> PrefetchFilter(ListPlusOfID0)
    Filter                           -> OrderByFilter(OrderExp)
    Filter                           -> WhereFilter(SetExp)
    Exp                              -> SetComp(LimitedExp,ListPlusOfFilter0)
    Exp                              -> ImportData(Path)
    PropVal                          -> PropVal(ID,Exp)
    Exp                              -> AnonymousFunction(ListStarOfFArg0,Type,ListStarOfStatement0)
    Exp                              -> AnonymousFunctionNoReturnType(ListStarOfFArg0,ListStarOfStatement0)
    Exp                              -> AnonymousControl(ListStarOfFArg0,ListStarOfScreenElem0)
    Exp                              -> Callback(ListStarOfStatement0)
    Exp                              -> AsyncCall(ListStarOfExp0)
    Exp                              -> Tuple(Exp,ListStarOfExp0)
    Exp                              -> List(ListStarOfExp0)
    Exp                              -> EntityCons(Type,ListStarOfPropVal0)
    Exp                              -> CollectionCons(QId,ListStarOfType0,ListStarOfExp0)
    Exp                              -> Choice(Exp,Exp,Exp)
    Exp                              -> BinMethodCall(Exp,OperatorMethodId,Exp)
    Exp                              -> BinMethodCall(Exp,TermOperatorMethodId,Exp)
    Exp                              -> BinMethodCall(Exp,CompareMethodId,Exp)
    Exp                              -> BinMethodCall(Exp,BoolMethodId,Exp)
    NamedExp                         -> NamedExp(ID,Exp)
    NamedExp                         -> Exp
    LimitedSetExp                    -> LimitedExp
    LimitedExp                       -> Indexer(Exp,Exp)
    LimitedExp                       -> FieldAccess(Exp,ID)
    LimitedExp                       -> MethodCall(Exp,ID,ListStarOfNamedExp0)
    LimitedExp                       -> Brackets(Exp)
    LimitedExp                       -> Var(QId)
    LimitedExp                       -> Call(QId,ListStarOfNamedExp0)
    Exp                              -> LimitedSetExp
    Exp                              -> Not(Exp)
    LimitedSetExp                    -> This()
    LimitedSetExp                    -> Null()
    LimitedSetExp                    -> False()
    LimitedSetExp                    -> True()
    LimitedSetExp                    -> Num(NUMBER)
    LimitedSetExp                    -> String(STRING)
    Statement                        -> FunctionDef
    Statement                        -> Async(ListStarOfStatement0)
    Statement                        -> ScreenReturn()
    Statement                        -> Return()
    Statement                        -> ScreenReturn(Exp)
    Statement                        -> Return(Exp)
    Statement                        -> ForInferred(LValue,Exp,ListStarOfStatement0)
    Statement                        -> For(LValue,Type,Exp,ListStarOfStatement0)
    Statement                        -> Block(ListStarOfStatement0)
    Statement                        -> While(Exp,ListStarOfStatement0)
    Statement                        -> ForInferred(LValue,Exp,ListStarOfStatement0)
    Statement                        -> For(LValue,Type,Exp,ListStarOfStatement0)
    Statement                        -> IfNoElse(Exp,Statement)
    Statement                        -> If(Exp,Statement,Statement)
    Statement                        -> ExpStat(Exp)
    LValue                           -> LIndexer(Exp,Exp)
    LValue                           -> LTuple(LValue,ListStarOfLValue0)
    LValue                           -> LFieldAccess(Exp,ID)
    LValue                           -> QId
    Statement                        -> Assignment(LValue,Exp)
    Statement                        -> VarDeclInferred(ID,Exp)
    Statement                        -> VarDecl(ID,Type,Exp)
    Definition                       -> Statement
    FunctionDef                      -> StaticSyncFunctionNoReturnType(ListStarOfMetaAnno0,QId,ListStarOfFArg0,ListStarOfStatement0)
    FunctionDef                      -> StaticSyncFunction(ListStarOfMetaAnno0,QId,ListStarOfFArg0,Type,ListStarOfStatement0)
    FunctionDef                      -> StaticFunctionNoReturnType(ListStarOfMetaAnno0,QId,ListStarOfFArg0,ListStarOfStatement0)
    FunctionDef                      -> StaticFunction(ListStarOfMetaAnno0,QId,ListStarOfFArg0,Type,ListStarOfStatement0)
    FunctionDef                      -> SyncFunctionNoReturnType(ListStarOfMetaAnno0,QId,ListStarOfFArg0,ListStarOfStatement0)
    FunctionDef                      -> SyncFunction(ListStarOfMetaAnno0,QId,ListStarOfFArg0,Type,ListStarOfStatement0)
    FunctionDef                      -> FunctionNoReturnType(ListStarOfMetaAnno0,QId,ListStarOfFArg0,ListStarOfStatement0)
    FunctionDef                      -> Function(ListStarOfMetaAnno0,QId,ListStarOfFArg0,Type,ListStarOfStatement0)
    MethodId                         -> <string>
    PostFixId                        -> <string>
    OperatorMethodId                 -> <string>
    TermOperatorMethodId             -> <string>
    CompareMethodId                  -> <string>
    BoolMethodId                     -> <string>
    Padding                          -> <string>
    StringQuotedPart1                -> StringEscape(Exp)
    StringQuotation                  -> StringQuotation(ListStarOfStringQuotedPart10)
    UriPart                          -> UriVar(ID)
    UriPart                          -> UriPart(FILENAME)
    UriPath                          -> UriPath(ListStarOfUriPart0)
    Definition                       -> ModuleJavascriptFor(QId,QId,JSModule)
    Definition                       -> JavascriptFor(QId,JSModule)
    Definition                       -> ModuleJavascript(QId,JSModule)
    Definition                       -> Javascript(JSModule)
    Path                             -> QuotedPath(STRING)
    Path                             -> AbsolutePath(ListPlusOfFILENAME0)
    Path                             -> Path(ListPlusOfFILENAME0)
    MetaAnno                         -> DecoratorAnno(Exp)
    MetaAnno                         -> PersistableAnno()
    MetaAnno                         -> WhenAnno(Exp)
    MetaAnno                         -> DocAnno(STRING)
    Type                             -> FunctionType(ListPlusOfNFType0,NFType)
    Type                             -> NFType
    NFType                           -> DynamicType()
    NFType                           -> ArrayType(Type)
    NFType                           -> TupleType(ListStarOfType0)
    NFType                           -> GenericType(QId,ListStarOfType0)
    NFType                           -> SimpleType(QId)
    FArg                             -> FArgOptional(ID,Type,Exp)
    FArg                             -> FArg(ID,Type)
    Definition                       -> Mixin(QId)
    Definition                       -> Resource(Path)
    Definition                       -> Load(Path)
    Definition                       -> Import(QId)
    Definition                       -> DynamicImport(QId)
    Start                            -> Application(ID,ListStarOfDefinition0)
    Start                            -> Module(QId,ListStarOfDefinition0)
    QId                              -> QId(QId,ID)
    QId                              -> ID
    JSExp                            -> JSAsyncFunctionExp(ListStarOfJSID0,ListStarOfJSStat0)
    JSExp                            -> JSFunctionExp(ListStarOfJSID0,ListStarOfJSStat0)
    JSIndexerSubscript               -> JSIndex(JSExp)
    JSExp                            -> JSPropAccess(JSExp,JSIndexerSubscript)
    JSExp                            -> JSAsyncCall(JSExp,ListStarOfJSExp0)
    JSExp                            -> JSCall(JSExp,ListStarOfJSExp0)
    JSExp                            -> JSFieldAccess(JSExp,JSID)
    JSExp                            -> JSOp(JSExp,JSOperatorMethodId,JSExp)
    JSExp                            -> JSOp(JSExp,JSTermOperatorMethodId,JSExp)
    JSExp                            -> JSOp(JSExp,JSCompareMethodId,JSExp)
    JSExp                            -> JSOp(JSExp,JSBoolMethodId,JSExp)
    JSExp                            -> JSBracket(JSExp)
    JSExp                            -> JSChoice(JSExp,JSExp,JSExp)
    JSExp                            -> JSIn(JSExp,JSExp)
    JSExp                            -> JSTypeOf(JSExp)
    JSExp                            -> JSNot(JSExp)
    JSExp                            -> JSDec(JSExp)
    JSExp                            -> JSInc(JSExp)
    JSPropVal                        -> JSPropVal(JSExp,JSExp)
    JSPropVal                        -> JSPropVal(JSID,JSExp)
    JSExp                            -> JSObj(ListStarOfJSPropVal0)
    JSExp                            -> JSNew(JSExp,ListStarOfJSExp0)
    JSExp                            -> JSArrayCons(ListStarOfJSExp0)
    JSExp                            -> JSAssign(JSLVal,JSAssignOp,JSExp)
    JSExp                            -> VarJSExp
    JSExp                            -> JSNull()
    JSExp                            -> JSThis()
    JSExp                            -> JSFalse()
    JSExp                            -> JSTrue()
    VarJSExp                         -> JSVar(JSID)
    JSExp                            -> JSIntLit(JSHexIntegerLiteral)
    JSExp                            -> JSIntLit(JSDecimalLiteral)
    JSExp                            -> JSStringLit(JSSTRING)
    JSExp                            -> JSRegex(Pattern,OptJSID0)
    JSLVal                           -> JSLPropAccess(JSExp,JSExp)
    JSLVal                           -> JSLVar(JSID)
    JSLVal                           -> JSLFieldAccess(JSExp,JSID)
    JSStat                           -> JSAsyncFunctionDecl(JSID,ListStarOfJSID0,ListStarOfJSStat0)
    JSStat                           -> JSFunctionDecl(JSID,ListStarOfJSID0,ListStarOfJSStat0)
    JSStat                           -> JSBlock(ListStarOfJSStat0)
    JSStat                           -> JSExpStat(JSExp)
    JSStat                           -> JSDelete(JSExp)
    JSStat                           -> JSReturn()
    JSStat                           -> JSReturn(JSExp)
    JSStat                           -> JSThrow(JSExp)
    JSStat                           -> JSBreak()
    Case                             -> JSDefaultCase(ListStarOfJSStat0)
    Case                             -> JSCase(JSExp,ListStarOfJSStat0)
    JSStat                           -> JSSwitch(JSExp,ListStarOfCase0)
    JSStat                           -> JSTryCatch(ListStarOfJSStat0,JSID,ListStarOfJSStat0)
    JSStat                           -> JSWhile(JSExp,JSStat)
    JSStat                           -> JSIfNoElse(JSExp,JSStat)
    JSStat                           -> JSIf(JSExp,JSStat,JSStat)
    JSStat                           -> JSForIn(JSID,JSExp,JSStat)
    JSStat                           -> JSFor(JSStat,JSExp,JSExp,JSStat)
    JSStat                           -> JSVarDecl(JSID,JSExp)
    JSStat                           -> JSVarDeclNoInit(ListStarOfJSID0)
    JSModule                         -> JSModule(ListStarOfJSStat0)
    KEYWORD                          -> <string>
    JSAssignOp                       -> <string>
    JSOperatorMethodId               -> <string>
    JSTermOperatorMethodId           -> <string>
    JSCompareMethodId                -> <string>
    JSBoolMethodId                   -> <string>
    Definition                       -> MiddlewareUse(Exp)
    HttpMethod                       -> DeleteMethod()
    HttpMethod                       -> PutMethod()
    HttpMethod                       -> PostMethod()
    HttpMethod                       -> GetMethod()
    MetaAnno                         -> SocketEventAnno(STRING)
    MetaAnno                         -> ServiceAnno(HttpMethod,UriPath)
    ServerSetting                    -> DebugSetting()
    ServerSetting                    -> DatabaseSetting(STRING,STRING,STRING,STRING)
    Start                            -> ServerApplication(ID,ListStarOfServerSetting0,ListStarOfDefinition0)
    NativeSetting                    -> buildfarmPlatforms(ListStarOfPLATFORM0)
    NativeSetting                    -> buildfarmPassword(STRING)
    NativeSetting                    -> buildfarmUsername(STRING)
    Setting                          -> NativeSettings(ListStarOfNativeSetting0)
    Setting                          -> StyleVarSetting(StyleVar,StyleExp)
    Setting                          -> LoadingHtmlSetting(STRING)
    Setting                          -> DebugSetting()
    Setting                          -> OfflineSetting()
    Setting                          -> ReleaseOutputSetting(STRING)
    Setting                          -> OutputSetting(STRING)
    Setting                          -> HtmlSetting(FILENAME)
    Setting                          -> LibSetting(Path)
    Setting                          -> StdLibSetting(Path)
    Setting                          -> VersionSetting(STRING)
    Setting                          -> IconSetting(Path)
    Setting                          -> DatabaseSetting(STRING)
    Setting                          -> TitleSetting(STRING)
    Start                            -> Configuration(ListStarOfSetting0)
    JSHexDigit                       -> <string>
    JSHexIntegerLiteral              -> <string>
    JSSignedInteger                  -> <string>
    JSExponentPart                   -> <string>
    JSDecimalIntLiteral              -> <string>
    JSDecimalLiteral                 -> <string>
    JSEOF                            -> <string>
    JSCommentChar                    -> <string>
    JSStringChar2                    -> <string>
    JSBackSlashChar                  -> <string>
    JSStringChar                     -> <string>
    JSSTRING                         -> <string>
    JSID                             -> <string>
    PLATFORM                         -> <string>
    Unit                             -> PercentageUnit()
    Unit                             -> SUnit()
    Unit                             -> PtUnit()
    Unit                             -> EmUnit()
    Unit                             -> PxUnit()
    StyleExpsTL                      -> StyleExps
    StyleExpsTL                      -> StyleExpsCS(ListPlusOfStyleExp0)
    StyleExps                        -> StyleExps(ListPlusOfStyleExp1)
    StyleExp                         -> StyleCall(STYLEPROPID,ListStarOfStyleExps0)
    StyleExp                         -> StylePath(FILENAME,ListPlusOfFILENAME0)
    StyleExp                         -> ImportData(Path)
    StyleExp                         -> StyleFieldAccess(StyleVar,ID)
    StyleExp                         -> StyleMul(StyleExp,StyleExp)
    StyleExp                         -> StyleSub(StyleExp,StyleExp)
    StyleExp                         -> StyleAdd(StyleExp,StyleExp)
    StyleExp                         -> StyleVar
    StyleExp                         -> StylePropVal(STYLEID,StyleExp)
    StyleExp                         -> NumUnit(NUMBER,Unit)
    StyleExp                         -> Num(NUMBER)
    StyleExp                         -> String(STRING)
    StyleExp                         -> StyleId(STYLEID)
    StyleExp                         -> Color(COLOR)
    StyleSelector                    -> StyleSelectorWithPseudoArg(QId,STYLEPROPID,STYLEPROPID)
    StyleSelector                    -> StyleSelectorWithPseudo(QId,STYLEPROPID)
    StyleSelector                    -> StyleSelector(QId)
    StyleElem                        -> StyleElemRecover(QId)
    StyleElem                        -> StyleMixinCall(QId,ListStarOfStyleExps0)
    StyleElem                        -> StyleProperty(STYLEPROPID,StyleExpsTL)
    Definition                       -> ExternalStyle(ListStarOfMetaAnno0,ListPlusOfStyleSelector0)
    StyleVar                         -> StyleVar(STYLEID)
    Definition                       -> StyleVarDecl(StyleVar,StyleExp)
    StyleFArg                        -> StyleFArg(STYLEID)
    Definition                       -> StyleMixin(ListStarOfMetaAnno0,QId,ListStarOfStyleFArg0,ListStarOfStyleElem0)
    Definition                       -> Style(ListStarOfMetaAnno0,ListPlusOfStyleSelector0,ListStarOfStyleElem0)
    Definition                       -> ExternalControl(ListStarOfMetaAnno0,QId,ListStarOfFArg0)
    Definition                       -> ExternalVarDecl(QId,Type)
    Definition                       -> ExternalSyncFunction(ListStarOfMetaAnno0,QId,ListStarOfFArg0,Type)
    Definition                       -> ExternalFunction(ListStarOfMetaAnno0,QId,ListStarOfFArg0,Type)
    Definition                       -> ExternalEntity(ListStarOfMetaAnno0,QId,Type,ListStarOfEntityBodyDecl0)
    Definition                       -> ExternalScreen(ListStarOfMetaAnno0,QId,ListStarOfFArg0,Type)
    Definition                       -> ExternalControl(ListStarOfMetaAnno0,QId,ListStarOfFArg0)
    ExternalMemberDecl               -> EntityBodyDecl
    ExternalMemberDecl               -> ExternalSyncMethod(ListStarOfMetaAnno0,ID,ListStarOfFArg0,Type)
    ExternalMemberDecl               -> ExternalStaticSyncMethod(ListStarOfMetaAnno0,ID,ListStarOfFArg0,Type)
    ExternalMemberDecl               -> ExternalMethod(ListStarOfMetaAnno0,ID,ListStarOfFArg0,Type)
    ExternalMemberDecl               -> ExternalStaticMethod(ListStarOfMetaAnno0,ID,ListStarOfFArg0,Type)
    Definition                       -> ExternalGenericType(ListStarOfMetaAnno0,QId,ListStarOfID0,ListStarOfExternalMemberDecl0)
    Definition                       -> ExternalType(ListStarOfMetaAnno0,QId,Type,ListStarOfExternalMemberDecl0)
    Definition                       -> ExternalTypeNoSuper(ListStarOfMetaAnno0,QId,ListStarOfExternalMemberDecl0)
    STYLEID                          -> <string>
    STYLEPROPID                      -> <string>
    COLOR                            -> <string>
    RegexId                          -> RegexId(RegexID)
    RegexID                          -> <string>
    ControlValue                     -> <string>
    FourHexValue                     -> <string>
    TwoHexValue                      -> <string>
    OctalValue                       -> <string>
    BackReference                    -> <string>
    Integer                          -> <string>
    QuotablePatternSymbol            -> DoubleQuote()
    BracketCharacter                 -> Quoted(QuotablePatternSymbol)
    AtomCharacter                    -> Quoted(QuotablePatternSymbol)
    QuotablePatternSymbol            -> <string>
    AtomCharacter                    -> Newline()
    AtomCharacter                    -> Tab()
    AtomCharacter                    -> Space()
    AtomCharacter                    -> BackReference(BackReference)
    AtomCharacter                    -> EndInputFinalBoundry()
    AtomCharacter                    -> EndInputBoundry()
    AtomCharacter                    -> PrevMatchEndBoundry()
    AtomCharacter                    -> InputBeginBoundry()
    AtomCharacter                    -> NonWordBoundry()
    AtomCharacter                    -> WordBoundry()
    AtomCharacter                    -> ControlCharacter(ControlValue)
    AtomCharacter                    -> NonDigitChar()
    AtomCharacter                    -> DigitChar()
    AtomCharacter                    -> NonWhiteSpaceChar()
    AtomCharacter                    -> WhiteSpaceChar()
    AtomCharacter                    -> NonWordChar()
    AtomCharacter                    -> WordChar()
    AtomCharacter                    -> Escape()
    AtomCharacter                    -> Alarm()
    AtomCharacter                    -> Formfeed()
    AtomCharacter                    -> Return()
    AtomCharacter                    -> Newline()
    AtomCharacter                    -> Tab()
    AtomCharacter                    -> DecHexChar(FourHexValue)
    AtomCharacter                    -> HexHexChar(TwoHexValue)
    AtomCharacter                    -> OctalChar(OctalValue)
    BracketCharacter                 -> Newline()
    BracketCharacter                 -> Tab()
    BracketCharacter                 -> Space()
    BracketCharacter                 -> BackReference(BackReference)
    BracketCharacter                 -> EndInputFinalBoundry()
    BracketCharacter                 -> EndInputBoundry()
    BracketCharacter                 -> PrevMatchEndBoundry()
    BracketCharacter                 -> InputBeginBoundry()
    BracketCharacter                 -> NonWordBoundry()
    BracketCharacter                 -> WordBoundry()
    BracketCharacter                 -> ControlCharacter(ControlValue)
    BracketCharacter                 -> NonDigitChar()
    BracketCharacter                 -> DigitChar()
    BracketCharacter                 -> NonWhiteSpaceChar()
    BracketCharacter                 -> WhiteSpaceChar()
    BracketCharacter                 -> NonWordChar()
    BracketCharacter                 -> WordChar()
    BracketCharacter                 -> Escape()
    BracketCharacter                 -> Alarm()
    BracketCharacter                 -> Formfeed()
    BracketCharacter                 -> Return()
    BracketCharacter                 -> Newline()
    BracketCharacter                 -> Tab()
    BracketCharacter                 -> DecHexChar(FourHexValue)
    BracketCharacter                 -> HexHexChar(TwoHexValue)
    BracketCharacter                 -> OctalChar(OctalValue)
    AtomCharacter                    -> DoubleQuote()
    BracketCharacter                 -> DoubleQuote()
    Modifiers                        -> <string>
    Modifier                         -> <string>
    AllChars                         -> <string>
    AtomLiteral                      -> <string>
    BracketLiteral                   -> <string>
    ClassKeyword                     -> CurrencySymbol()
    ClassKeyword                     -> UppercaseLetter()
    ClassKeyword                     -> GreekBlock()
    ClassKeyword                     -> JavaIsMirrored()
    ClassKeyword                     -> JavaIsWhitespace()
    ClassKeyword                     -> JavaIsLowerCase()
    ClassKeyword                     -> JavaIsLowerCase()
    ClassKeyword                     -> WhiteSpace()
    ClassKeyword                     -> XDigitClass()
    ClassKeyword                     -> CntrlClass()
    ClassKeyword                     -> BlankClass()
    ClassKeyword                     -> PrintClass()
    ClassKeyword                     -> GraphClass()
    ClassKeyword                     -> PunctClass()
    ClassKeyword                     -> AlnumClass()
    ClassKeyword                     -> DigitClass()
    ClassKeyword                     -> AlphaClass()
    ClassKeyword                     -> ASCIIClass()
    ClassKeyword                     -> UpperClass()
    ClassKeyword                     -> LowerClass()
    BracketItem                      -> BracketCharacter(BracketCharacter)
    BracketItem                      -> BracketLiteral(BracketLiteral)
    BracketItem                      -> Union(CharacterClass)
    BracketItem                      -> Range(BracketLiteral_BracketCharacter0,BracketLiteral_BracketCharacter0)
    CharacterClass                   -> NegatedBracketList(ListPlusOfBracketItem0)
    CharacterClass                   -> BracketList(ListPlusOfBracketItem0)
    Atom                             -> QuotedAtom(AllChars)
    Atom                             -> AtomCharacter(AtomCharacter)
    Atom                             -> AtomLiteral(AtomLiteral)
    Atom                             -> CharacterClass(CharacterClass)
    Atom                             -> LineEnd()
    Atom                             -> LineStart()
    Atom                             -> SingleCharacter()
    Atom                             -> Empty()
    Atom                             -> RegexCapture(Pattern,RegexId)
    Atom                             -> PythonCapture(RegexId,Pattern)
    Atom                             -> NegativeLookbehind(Pattern)
    Atom                             -> PositiveLookbehind(Pattern)
    Atom                             -> NegativeLookahead(Pattern)
    Atom                             -> PositiveLookahead(Pattern)
    Atom                             -> NonCapture(Pattern)
    Atom                             -> Capture(Pattern)
    Quantifier                       -> PossessiveOneOrMore()
    Quantifier                       -> PossessiveZeroOrMore()
    Quantifier                       -> PossessiveOnceOrNot()
    Quantifier                       -> PossessiveLowerUpperBound(Integer,Integer)
    Quantifier                       -> PossessiveLowerBound(Integer)
    Quantifier                       -> PossessiveExactBound(Integer)
    Quantifier                       -> ReluctantOneOrMore()
    Quantifier                       -> ReluctantZeroOrMore()
    Quantifier                       -> ReluctantOnceOrNot()
    Quantifier                       -> ReluctantLowerUpperBound(Integer,Integer)
    Quantifier                       -> ReluctantLowerBound(Integer)
    Quantifier                       -> ReluctantExactBound(Integer)
    Quantifier                       -> GreedyOneOrMore()
    Quantifier                       -> GreedyZeroOrMore()
    Quantifier                       -> GreedyOnceOrNot()
    Quantifier                       -> GreedyLowerUpperBound(Integer,Integer)
    Quantifier                       -> GreedyLowerBound(Integer)
    Quantifier                       -> GreedyExactBound(Integer)
    Piece                            -> QuantifiedAtom(Atom,Quantifier)
    Piece                            -> SingleAtom(Atom)
    Branche                          -> Pieces(ListPlusOfPiece0)
    Pattern                          -> TupleBranch(Pattern,Pattern)
    Pattern                          -> SingleBranch(Branche)
    Exp                              -> RegExp(Pattern,Modifiers)
    Definition                       -> Type(ListStarOfMetaAnno0,QId,Type,ListStarOfEntityBodyDecl0)
    Definition                       -> TypeNoSuper(ListStarOfMetaAnno0,QId,ListStarOfEntityBodyDecl0)
    ResourceElem                     -> PropVal
    ServiceElem                      -> Resource(ListStarOfMetaAnno0,ID,ListStarOfFArg0,Type,ListStarOfResourceElem0)
    ServiceElem                      -> PropVal
    Definition                       -> Service(ListStarOfMetaAnno0,QId,ListStarOfServiceElem0)
    MetaAnno                         -> SyncEntityAnno(UriPath)
    Anno                             -> InverseAnno(ID)
    Anno                             -> SimpleAnno(ID)
    EntityBodyDecl                   -> FunctionDef
    EntityBodyDecl                   -> PropertyNoAnnos(ListStarOfMetaAnno0,ID,Type)
    EntityBodyDecl                   -> Property(ListStarOfMetaAnno0,ID,Type,ListStarOfAnno0)
    Definition                       -> EntityNoSuper(ListStarOfMetaAnno0,QId,ListStarOfEntityBodyDecl0)
    Definition                       -> Entity(ListStarOfMetaAnno0,QId,Type,ListStarOfEntityBodyDecl0)
    EOF                              -> <string>
    CommentChar                      -> <string>
    StringChar2                      -> <string>
    StringChar                       -> <string>
    STRING                           -> <string>
    SignedInteger                    -> <string>
    ExponentPart                     -> <string>
    FloatDigits                      -> <string>
    NUMBER                           -> <string>
    FILENAME                         -> <string>
    HTMLID                           -> <string>
    ID                               -> <string>
