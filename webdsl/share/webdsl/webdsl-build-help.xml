<project name="webdsl-build-help" default="help">
 
  
  <target name="help">
    <echo level="info">
Options:
         build : Performs 'webdsl clean' and compiles the application
                  using the settings in application.ini.

           new : Creates an example WebDSL application in a subdirectory
                 of the current directory. The application name is also
                 the name of the directory.

           war : Builds the application and creates a war file, which is ready to be deployed in Tomcat.

        deploy : Deploys the application to Tomcat. Changing the settings
                 in application.ini requires a new 'webdsl build' first.

         clean : Removes the generated files and all the caches.

      cleanall : Same as clean.

         check : Runs all tests using the database settings in application.ini.

    test [app] : Builds [app] using a generated application.ini and
                 runs all tests on a Sqlite database file.

test-web [app] : Builds [app] using a generated application.ini and
                 runs all UI tests on a Sqlite database file and a local Tomcat instance.

     run [app] : Builds [app] using a generated application.ini and
                 runs the app in a local Tomcat instance.

           run : Builds [app] using the database settings in application.ini and
                 runs the app in a local Tomcat instance.

       rebuild : Recompiles the application code, but does not check for changes in static content (e.g. images).
                 Uses the settings in application.ini.

 rebuilddeploy : Recompiles the application code, but does not check for changes in static content (e.g. images).
                 Uses the settings in application.ini. After the rebuild, a 'tomcatdeploy' is executed.

       version : Displays version information on WebDSL, such as the Git commit from which it was built.

Note: most WebDSL tasks can be chained in one call, for example, 'webdsl build tomcatdeploy' does a build and a deploy
    </echo>
<!--	
  #  echo "      code : Compile your application to Java or Python code, but do not compile them."
  #  echo "       run : Runs the application (Python AppEngine backend only)."
  #  echo "  analyze : Perform various analyses on the application but do not generate code."
  #  echo " cleanall : Removes the created Seam project and dist directory."
-->
  </target>	
  
  
</project>
